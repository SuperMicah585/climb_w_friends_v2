// <auto-generated />
using System.Collections.Generic;
using ClimbWithFriendsAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ClimbWithFriendsAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241119182539_updatepointtypeinseed")]
    partial class updatepointtypeinseed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "postgis");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ClimbWithFriendsAPI.Data.Climb", b =>
                {
                    b.Property<int>("ClimbId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ClimbId"));

                    b.Property<string>("ClimbName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ClimbType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Point>("Coordinates")
                        .IsRequired()
                        .HasColumnType("geometry");

                    b.Property<string>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Pitches")
                        .HasColumnType("integer");

                    b.Property<string>("Rating")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UpdatedAt")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ClimbId");

                    b.ToTable("Climbs");

                    b.HasData(
                        new
                        {
                            ClimbId = 1,
                            ClimbName = "El Capitan",
                            ClimbType = "Trad,Big Wall",
                            Coordinates = (NetTopologySuite.Geometries.Point)new NetTopologySuite.IO.WKTReader().Read("SRID=0;POINT (-119.638 37.733)"),
                            CreatedAt = "2024-11-19T18:25:39.0582722Z",
                            Description = "One of the most iconic climbs in the world.",
                            Location = "Yosemite National Park",
                            Pitches = 30,
                            Rating = "5.12d",
                            UpdatedAt = "2024-11-19T18:25:39.0582744Z",
                            Url = "https://www.example.com/el-capitan"
                        },
                        new
                        {
                            ClimbId = 2,
                            ClimbName = "The Nose",
                            ClimbType = "Trad,Big Wall",
                            Coordinates = (NetTopologySuite.Geometries.Point)new NetTopologySuite.IO.WKTReader().Read("SRID=0;POINT (-119.638 37.733)"),
                            CreatedAt = "2024-11-19T18:25:39.0582748Z",
                            Description = "A legendary climb with a rich history.",
                            Location = "Yosemite National Park",
                            Pitches = 31,
                            Rating = "5.14a",
                            UpdatedAt = "2024-11-19T18:25:39.0582749Z",
                            Url = "https://www.example.com/the-nose"
                        },
                        new
                        {
                            ClimbId = 3,
                            ClimbName = "Moonlight Buttress",
                            ClimbType = "Trad",
                            Coordinates = (NetTopologySuite.Geometries.Point)new NetTopologySuite.IO.WKTReader().Read("SRID=0;POINT (-113.026 37.274)"),
                            CreatedAt = "2024-11-19T18:25:39.0582752Z",
                            Description = "A stunning climb up a sandstone wall.",
                            Location = "Zion National Park",
                            Pitches = 9,
                            Rating = "5.12d",
                            UpdatedAt = "2024-11-19T18:25:39.0582753Z",
                            Url = "https://www.example.com/moonlight-buttress"
                        });
                });

            modelBuilder.Entity("ClimbWithFriendsAPI.Data.Feature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClimbId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ClimbName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<List<string>>("ClimberNames")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<string>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Grade")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("numeric");

                    b.Property<string>("UpdatedAt")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Features");
                });

            modelBuilder.Entity("ClimbWithFriendsAPI.Data.Map", b =>
                {
                    b.Property<int>("MapId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MapId"));

                    b.Property<string>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MapName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UpdatedAt")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("MapId");

                    b.ToTable("Maps");
                });
#pragma warning restore 612, 618
        }
    }
}
